#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) PostgreSQL refresh stream 1 runner

Usage:
  $(basename "${0}") [OPTION]

Options:
  -e             use EXPLAIN ANALYZE
  -f SCALE_FACTOR
                 database SCALE_FACTOR
  -U             run test as an unprivileged user
  -V, --version  output version information, then exit
  -?, --help     show this help, then exit

@HOMEPAGE@
EOF
}

EXPLAIN=0

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-e)
		EXPLAIN=1
		;;
	(-f)
		shift
		SCALE_FACTOR="${1}"
		;;
	(-U)
		COPYPREFIX="\\"
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

PSQL="psql -X -v ON_ERROR_STOP=1"

DATASET=`${PSQL} -A -t -c "SELECT nextval('dataset');"`
eval "\"${DBGEN}\" -s ${SCALE_FACTOR} -U ${DATASET} -S ${DATASET}" || exit 1

if [ $EXPLAIN -eq 1 ]; then
	SQL_EXTRA=$(cat "${DSS_QUERY}/explain-analyze.sql")
fi

echo "`date`: Stream ${DATASET} : Starting Refresh Stream 1..."
s_time=`date +%s`

${PSQL} << __EOF__
$SQL_EXTRA
BEGIN;
${COPYPREFIX}COPY lineitem FROM '${DSS_PATH}/lineitem.tbl.u${DATASET}' USING DELIMITERS '|';
${COPYPREFIX}COPY orders FROM '${DSS_PATH}/orders.tbl.u${DATASET}' USING DELIMITERS '|';
COMMIT;
__EOF__

e_time=`date +%s`
echo "`date`: Stream ${DATASET} : Refresh Stream 1 completed."
diff_time=$(( $e_time - $s_time ))
echo "Stream ${DATASET} : Elapsed time for Refresh Stream 1 : $diff_time seconds"

if [ ${DATASET} -gt 0 ]; then
	exit ${DATASET}
fi
exit -1
