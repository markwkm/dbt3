#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) PostgreSQL table creator

Usage:
  $(basename "${0}") [OPTION]

Options:
  -t             usage tablespaces
  -V, --version  output version information, then exit
  -?, --help     show this help, then exit

@HOMEPAGE@
EOF
}

create_table() {
	SQL=${1}

	${PSQL} << __EOF__
${SQL};
__EOF__
	return $?
}

NUM_OR_FD="NUMERIC"
USE_TABLESPACES=0
# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-t)
		USE_TABLESPACES=1
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

PSQL="psql -v ON_ERROR_STOP=1 -X -A -t"

# if the FIXEDDECIMAL extension exists, use it instead of NUMERIC (or REAL).
RC=`$PSQL -c "SELECT 1 FROM pg_available_extensions WHERE name = 'fixeddecimal';"`
if [ "x$RC" = "x1" ]; then
	$PSQL -c "CREATE EXTENSION fixeddecimal;"
	NUM_OR_FD="FIXEDDECIMAL"
fi

if [ ${USE_TABLESPACES} -eq 1 ]; then
	TS_SUPPLIER_DIR="${TSDIR}/supplier/ts"
	TS_PART_DIR="${TSDIR}/part/ts"
	TS_PARTSUPP_DIR="${TSDIR}/partsupp/ts"
	TS_CUSTOMER_DIR="${TSDIR}/customer/ts"
	TS_ORDERS_DIR="${TSDIR}/orders/ts"
	TS_LINEITEM_DIR="${TSDIR}/lineitem/ts"
	TS_NATION_DIR="${TSDIR}/nation/ts"
	TS_REGION_DIR="${TSDIR}/region/ts"

	mkdir -p ${TS_SUPPLIER_DIR}
	mkdir -p ${TS_PART_DIR}
	mkdir -p ${TS_PARTSUPP_DIR}
	mkdir -p ${TS_CUSTOMER_DIR}
	mkdir -p ${TS_ORDERS_DIR}
	mkdir -p ${TS_LINEITEM_DIR}
	mkdir -p ${TS_NATION_DIR}
	mkdir -p ${TS_REGION_DIR}

	SUPPLIER_TABLESPACE="TABLESPACE dbt3_supplier"
	PART_TABLESPACE="TABLESPACE dbt3_part"
	PARTSUPP_TABLESPACE="TABLESPACE dbt3_partsupp"
	CUSTOMER_TABLESPACE="TABLESPACE dbt3_customer"
	ORDERS_TABLESPACE="TABLESPACE dbt3_orders"
	LINEITEM_TABLESPACE="TABLESPACE dbt3_lineitem"
	NATION_TABLESPACE="TABLESPACE dbt3_nation"
	REGION_TABLESPACE="TABLESPACE dbt3_region"

	${PSQL} -c "CREATE ${SUPPLIER_TABLESPACE} LOCATION '${TS_SUPPLIER_DIR}';"
	${PSQL} -c "CREATE ${PART_TABLESPACE} LOCATION '${TS_PART_DIR}';"
	${PSQL} -c "CREATE ${PARTSUPP_TABLESPACE} LOCATION '${TS_PARTSUPP_DIR}';"
	${PSQL} -c "CREATE ${CUSTOMER_TABLESPACE} LOCATION '${TS_CUSTOMER_DIR}';"
	${PSQL} -c "CREATE ${ORDERS_TABLESPACE} LOCATION '${TS_ORDERS_DIR}';"
	${PSQL} -c "CREATE ${LINEITEM_TABLESPACE} LOCATION '${TS_LINEITEM_DIR}';"
	${PSQL} -c "CREATE ${NATION_TABLESPACE} LOCATION '${TS_NATION_DIR}';"
	${PSQL} -c "CREATE ${REGION_TABLESPACE} LOCATION '${TS_REGION_DIR}';"
fi

create_table "
CREATE TABLE supplier (
	s_suppkey INTEGER NOT NULL,
	s_name CHAR(25) NOT NULL,
	s_address VARCHAR(40) NOT NULL,
	s_nationkey INTEGER NOT NULL,
	s_phone CHAR(15) NOT NULL,
	s_acctbal $NUM_OR_FD NOT NULL,
	s_comment VARCHAR(101) NOT NULL)
	${SUPPLIER_TABLESPACE};" || exit 1

create_table "
CREATE TABLE part (
	p_partkey INTEGER NOT NULL,
	p_name VARCHAR(55) NOT NULL,
	p_mfgr CHAR(25) NOT NULL,
	p_brand CHAR(10) NOT NULL,
	p_type VARCHAR(25) NOT NULL,
	p_size INTEGER NOT NULL,
	p_container CHAR(10) NOT NULL,
	p_retailprice $NUM_OR_FD NOT NULL,
	p_comment VARCHAR(23) NOT NULL)
	${PART_TABLESPACE};" || exit 1

create_table "
CREATE TABLE partsupp (
	ps_partkey INTEGER NOT NULL,
	ps_suppkey INTEGER NOT NULL,
	ps_availqty INTEGER NOT NULL,
	ps_supplycost $NUM_OR_FD NOT NULL,
	ps_comment VARCHAR(199) NOT NULL)
	${PARTSUPP_TABLESPACE};" || exit 1

create_table "
CREATE TABLE customer (
	c_custkey INTEGER NOT NULL,
	c_name VARCHAR(25) NOT NULL,
	c_address VARCHAR(40) NOT NULL,
	c_nationkey INTEGER NOT NULL,
	c_phone CHAR(15) NOT NULL,
	c_acctbal $NUM_OR_FD NOT NULL,
	c_mktsegment CHAR(10) NOT NULL,
	c_comment VARCHAR(117) NOT NULL)
	${CUSTOMER_TABLESPACE};" || exit 1

create_table "
CREATE TABLE orders (
	o_orderkey BIGINT NOT NULL,
	o_custkey INTEGER NOT NULL,
	o_orderstatus CHAR(1) NOT NULL,
	o_totalprice $NUM_OR_FD NOT NULL,
	o_orderdate DATE NOT NULL,
	o_orderpriority CHAR(15) NOT NULL,
	o_clerk CHAR(15) NOT NULL,
	o_shippriority INTEGER NOT NULL,
	o_comment VARCHAR(79) NOT NULL)
	${ORDERS_TABLESPACE};" || exit 1

create_table "
CREATE TABLE lineitem (
	l_orderkey BIGINT NOT NULL,
	l_partkey INTEGER NOT NULL,
	l_suppkey INTEGER NOT NULL,
	l_linenumber INTEGER NOT NULL,
	l_quantity $NUM_OR_FD NOT NULL,
	l_extendedprice $NUM_OR_FD NOT NULL,
	l_discount $NUM_OR_FD NOT NULL,
	l_tax $NUM_OR_FD NOT NULL,
	l_returnflag CHAR(1) NOT NULL,
	l_linestatus CHAR(1) NOT NULL,
	l_shipdate DATE NOT NULL,
	l_commitdate DATE NOT NULL,
	l_receiptdate DATE NOT NULL,
	l_shipinstruct CHAR(25) NOT NULL,
	l_shipmode CHAR(10) NOT NULL,
	l_comment VARCHAR(44) NOT NULL)
	${LINEITEM_TABLESPACE};" || exit 1

create_table "
CREATE TABLE nation (
	n_nationkey INTEGER NOT NULL,
	n_name CHAR(25) NOT NULL,
	n_regionkey INTEGER NOT NULL,
	n_comment VARCHAR(152) NOT NULL)
	${NATION_TABLESPACE};" || exit 1

create_table "
CREATE TABLE region (
	r_regionkey INTEGER NOT NULL,
	r_name CHAR(25) NOT NULL,
	r_comment VARCHAR(152) NOT NULL)
	${REGION_TABLESPACE};" || exit 1

create_table "
CREATE TABLE time_statistics (
	task_name VARCHAR(40),
	s_time TIMESTAMP,
	e_time TIMESTAMP);" || exit 1

${PSQL} << __EOF__
CREATE SEQUENCE dataset
MINVALUE 1
START WITH 1;
SELECT nextval('dataset');
__EOF__
