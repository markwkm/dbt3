#!/bin/bash
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2002-2008 Open Source Development Labs, Inc.
#               2002-2015 Mark Wong
#               2015      2ndQuadrant, Ltd.
#

. $HOME/pgxc_ctl/pgxc_ctl.conf

load_table()
{
	table=${1}
	file=${table}.tbl

	if [ $DIRECT_LOAD -eq 0 ]; then
			if [ "$table" = "nation" ] || [ "$table" = "region" ]; then
					$PSQL -c "COPY $table FROM '$DSS_PATH/$file' USING DELIMITERS '|';" &
			else
				for i in `seq 1 $NODES`; do
					$PSQL -c "COPY $table FROM '$DSS_PATH/$file.$i' USING DELIMITERS '|';" &
				done
			fi
	else
		if [ "$table" = "customer" ]; then
			FLAG="c"
		elif [ "$table" = "lineitem" ]; then
			FLAG="L"
		elif [ "$table" = "nation" ]; then
			$PSQL -c "COPY $table FROM PROGRAM 'DSS_CONFIG=$DSS_CONFIG $DBGEN -s $SCALE_FACTOR -T n -o' USING DELIMITERS '|';" &
			return
		elif [ "$table" = "orders" ]; then
			FLAG="O"
		elif [ "$table" = "part" ]; then
			FLAG="P"
		elif [ "$table" = "region" ]; then
			$PSQL -c "COPY $table FROM PROGRAM 'DSS_CONFIG=$DSS_CONFIG $DBGEN -s $SCALE_FACTOR -T r -o' USING DELIMITERS '|';" &
			return
		elif [ "$table" = "supplier" ]; then
			FLAG="s"
		elif [ "$table" = "partsupp" ]; then
			FLAG="S"
		else
			echo "unknown table: $table"
			return
		fi

		for i in `seq 1 $NODES`; do
			$PSQL -c "COPY $table FROM PROGRAM 'DSS_CONFIG=$DSS_CONFIG $DBGEN -s $SCALE_FACTOR -T $FLAG -o -C $NODES -S $i' USING DELIMITERS '|';" &
		done
	fi
	wait
}

supplier()
{
	load_table supplier
}

supplier_ind()
{

	$PSQL -c "
CREATE UNIQUE INDEX pk_supplier
ON supplier (s_suppkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX supplier_s_suppkey_idx_like
ON supplier (s_suppkey)
WITH (fillfactor = 100)
WHERE s_comment LIKE '%Customer%Complaints%';" &
	$PSQL -c "
CREATE INDEX supplier_s_nationkey_s_suppkey_idx
ON supplier (s_nationkey, s_suppkey)
WITH (fillfactor = 100);" &

	wait

	$PSQL -c "
ALTER TABLE supplier ADD CONSTRAINT pk_supplier PRIMARY KEY USING INDEX pk_supplier;"

	$PSQL -c "VACUUM ANALYZE supplier;"
}

part()
{
	load_table part
}

part_ind()
{
	$PSQL -c "
CREATE UNIQUE INDEX pk_part
ON part (p_partkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX part_p_type_p_partkey_idx
ON part(p_type, p_partkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX part_p_container_p_brand_p_partkey_idx
ON part(p_container, p_brand, p_partkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX part_ios_test1
ON part USING btree (p_size, p_partkey, p_brand, p_type)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX part_p_size_idx
ON part USING BRIN (p_size);" &

	wait

	$PSQL -c "
ALTER TABLE part ADD CONSTRAINT pk_part PRIMARY KEY USING INDEX pk_part;"

	$PSQL -c "VACUUM ANALYZE part;"
}

partsupp()
{
	load_table partsupp
}

partsupp_ind()
{

	$PSQL -c "
CREATE UNIQUE INDEX pk_partsupp
ON partsupp (ps_partkey, ps_suppkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX partsupp_ps_suppkey_idx
ON partsupp (ps_suppkey)
WITH (fillfactor = 100);" &

	wait

	$PSQL -c "
ALTER TABLE partsupp ADD CONSTRAINT pk_partsupp PRIMARY KEY USING INDEX pk_partsupp;"

	$PSQL -c "VACUUM ANALYZE partsupp;"
}

customer()
{
	load_table customer
}

customer_ind()
{

	$PSQL -c "
CREATE UNIQUE INDEX pk_customer
ON customer (c_custkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX customer_c_nationkey_c_custkey_idx
ON customer (c_nationkey, c_custkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX customer_c_phone_idx_c_acctbal
ON customer (substr(c_phone::text, 1, 2))
WHERE c_acctbal > 0.00;" &
	$PSQL -c "
CREATE INDEX customer_c_phone_c_acctbal_c_custkey_idx
ON customer (substring(c_phone from 1 for 2), c_acctbal, c_custkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX customer_c_mktsegment_c_custkey_idx
ON customer (c_mktsegment, c_custkey)
WITH (fillfactor = 100);" &

	wait

	$PSQL -c "
ALTER TABLE customer ADD CONSTRAINT pk_customer PRIMARY KEY USING INDEX pk_customer;"

	$PSQL -c "VACUUM ANALYZE customer;"
}

orders()
{
	load_table orders
}

orders_ind()
{

	$PSQL -c "
CREATE UNIQUE INDEX pk_orders
ON orders (o_orderkey) WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX orders_o_orderkey_o_orderdate_idx
ON orders (o_orderkey, o_orderdate)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX orders_o_custkey_idx
ON orders (o_custkey)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX orders_o_orderdate_idx
ON orders USING BRIN (o_orderdate);" &

	wait

	$PSQL -c "
ALTER TABLE orders ADD CONSTRAINT pk_orders PRIMARY KEY USING INDEX pk_orders;"

	$PSQL -c "VACUUM ANALYZE orders;"
}

lineitem()
{
	load_table lineitem
}

lineitem_ind()
{
	$PSQL -c "
CREATE UNIQUE INDEX pk_lineitem
ON lineitem (l_orderkey, l_linenumber)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX lineitem_l_partkey_l_quantity_l_shipmode_idx
ON lineitem (l_partkey, l_quantity, l_shipmode)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX lineitem_l_orderkey_idx_l_returnflag
ON lineitem (l_orderkey)
WITH (fillfactor = 100)
WHERE l_returnflag = 'R';" &
	$PSQL -c "
CREATE INDEX lineitem_l_orderkey_idx_part2
ON lineitem (l_orderkey)
WITH (fillfactor = 100)
WHERE l_commitdate < l_receiptdate
  AND l_shipdate < l_commitdate;" &
	$PSQL -c "
CREATE INDEX lineitem_l_orderkey_l_suppkey_l_quantity_idx
ON lineitem (l_orderkey, l_suppkey, l_quantity)
WITH (fillfactor = 100);" &
	# Q4, Q21
	$PSQL -c "
CREATE INDEX lineitem_l_orderkey_l_suppkey_idx
ON lineitem (l_orderkey, l_suppkey)
WITH (fillfactor = 100)
WHERE l_commitdate < l_receiptdate;" &
	$PSQL -c "
CREATE INDEX lineitem_l_partkey_l_suppkey_l_shipdate_l_quantity_idx
ON lineitem (l_partkey, l_suppkey, l_shipdate, l_quantity)
WITH (fillfactor = 100);" &
	$PSQL -c "
CREATE INDEX lineitem_l_shipdate_idx
ON lineitem USING BRIN (l_shipdate);" &
	$PSQL -c "
CREATE INDEX lineitem_l_receiptdate_idx
ON lineitem USING BRIN (l_receiptdate);" &

	wait

	$PSQL -c "
ALTER TABLE lineitem ADD CONSTRAINT pk_lineitem PRIMARY KEY USING INDEX pk_lineitem;"

	$PSQL -c "VACUUM ANALYZE lineitem;"
}

nation()
{
	load_table nation
}

nation_ind()
{
	$PSQL -c "
CREATE UNIQUE INDEX pk_nation
ON nation (n_nationkey)
WITH (fillfactor = 100);" &

	wait

	$PSQL -c "
ALTER TABLE nation ADD CONSTRAINT pk_nation PRIMARY KEY USING INDEX pk_nation;"

	$PSQL -c "VACUUM ANALYZE nation;"
}

region()
{
	load_table region
}

region_ind()
{
	$PSQL -c "
CREATE UNIQUE INDEX pk_region
ON region (r_regionkey)
WITH (fillfactor = 100);" &

	wait

	$PSQL -c "
ALTER TABLE region ADD CONSTRAINT pk_region PRIMARY KEY USING INDEX pk_region;"

	$PSQL -c "VACUUM ANALYZE region;"
}

DIRECT_LOAD=0
NODES=${#datanodeMasterServers[@]}
USE_TABLESPACES=0
while getopts "C:dt" OPT; do
	case ${OPT} in
	C)
		# Do nothing
		;;
	d)
		DIRECT_LOAD=1
		;;
	t)
		USE_TABLESPACES=1
		;;
	esac
done

PSQL="psql -v ON_ERROR_STOP=1 -X"

echo "Loading tables `date`"

supplier &
part &
partsupp &
customer &
orders &
lineitem &
nation &
region &

wait

echo "Building indexes `date`"

supplier_ind &
part_ind &
partsupp_ind &
customer_ind &
orders_ind &
lineitem_ind &
nation_ind &
region_ind &

wait
