#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

# dont start script as root!
id=`id | sed s/\(.*// | sed s/uid=//`

if [ "$id" = "0" ]; then
	echo "dont start script as root"
	exit 1
fi

DBNAME="dbt3"
MYSQL_ARGS=""
OUTPUT_DIR="."
PRIVILEGED=0

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) MySQL database creator

Usage:
  $(basename "${0}") [OPTION]

Options:
  --db-name      databse name
  -o DIRECTORY   DIRECTORY to store test results
  --privileged   stop and start database
  -p             database parameters to use
  -V, --version  output version information, then exit
  -x DIRECTORY   set WAL to DIRECTORY
  -?, --help     show this help, then exit

@HOMEPAGE@
EOF
}

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(--db-name)
		shift
		DBNAME="${1}"
		;;
	(--db-name=?*)
		DBNAME="${1#*--db-name=}"
		;;
	(--mysql-socket)
		shift
		MYSQL_ARGS="${MYSQL_ARGS} --socket=${1}"
		;;
	(--mysql-socket=?*)
		MYSQL_ARGS="${MYSQL_ARGS} --socket=${1#*--mysql-socket=}"
		;;
	(-o)
		shift
		OUTPUT_DIR="${1}"
		mkdir -p "${OUTPUT_DIR}"
		;;
	(--privileged)
		PRIVILEGED=1
		;;
	(-p)
		shift
		# Intentionally do nothing at this time.
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

if [ ${PRIVILEGED} -eq 1 ]; then
	if [ -z "${MYDATA}" ]; then
		echo "MYDATA not defined."
		exit 1
	fi

	dbt3-mysql-stop-db

	if [ -d "${MYDATA}" -a -d "${MYDATA}/mysql" -a -f "${MYDATA}/mysql/user.frm" ]; then
		echo "======================================="
		echo "DATADIR directory ${MYDATA} already exists"
		echo "Skipping mysql_install_db"
		echo "======================================="

		# Don't need to initdb, blindly try to drop the dbt3 database in case
		# it exists.
		dbt3-mysql-start-db -o ${OUTPUT_DIR} || exit 1
		dbt3-mysql-drop-db
		dbt3-mysql-stop-db
	else
		# initialize database cluster
		echo "initializing database ..."
		BASEDIR=`which mysql_install_db`
		mysql_install_db --basedir=`dirname ${BASEDIR}`/.. --datadir=${MYDATA}
	fi

	dbt3-mysql-start-db -o ${OUTPUT_DIR} || exit 1
fi

echo "Creating database $DBNAME..."
eval "mysql -u root ${MYSQL_ARGS} \
		-e \"CREATE DATABASE IF NOT EXISTS ${DBNAME};\""
