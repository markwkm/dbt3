#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) MySQL data loader

Usage:
  $(basename "${0}") [OPTION]

Options:
  -C PARTITIONS  how many PARTITIONS to break data into
  --db-name      databse name, default $DBNAME
  -o DIRECTORY   DIRECTORY to save any output, default current directory
  -V, --version  output version information, then exit
  -?, --help     show this help, then exit

@HOMEPAGE@
EOF
}

DBNAME="dbt3"
MYSQL_ARGS=""
OUTPUT_DIR="."

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-C)
		shift
		CHUNKS="${1}"
		;;
	(--db-name)
		shift
		DBNAME="${1}"
		;;
	(--db-name=?*)
		DBNAME="${1#*--db-name=}"
		;;
	(-d)
		# Intentionally do nothing at this time.
		;;
	(-o)
		shift
		OUTPUT_DIR="${1}"
		mkdir -p "${OUTPUT_DIR}"
		;;
	(-p)
		shift
		# Intentionally do nothing at this time.
		;;
	(--relax)
		# Intentionally do nothing at this time.
		;;
	(-t)
		# Intentionally do nothing at this time.
		;;
	(-U)
		# Intentionally do nothing at this time.
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

MYSQL="mysql -u root -D $DBNAME -s"

# Load tables
# This background stuff is honestly kinda ugly. IMO the right way to do this is
# to utilize make -j
load_table() {
	table=$1
	if [ "x$2" = "x" ]; then
		file=$table.tbl
	else
		file=$2.tbl
	fi
	# This disable/enable trick only works on MyISAM for the moment. 
	$MYSQL -e "alter table $table disable keys;"
	if [ "${CHUNKS}" -eq 1 ] || [ "${table}" = "nation" ] || \
			[ "${table}" = "region" ]; then
		file=${table}.tbl
		eval "mysqlimport -u root ${MYSQL_ARGS} \
				--fields-terminated-by='|' ${DBNAME} ${DSS_PATH}/${file}"
	else
		i=1
		while [ ${i} -le "${CHUNKS}" ]; do
			file=${table}.tbl.${i}
			eval "mysqlimport -u root ${MYSQL_ARGS} \
					--fields-terminated-by='|' ${DBNAME} ${DSS_PATH}/${file}" &
			i=$(( i + 1 ))
		done
		wait
	fi
	$MYSQL -e "alter table $table enable keys;"
}

supplier()
{
	load_table supplier

	$MYSQL -e "ALTER TABLE supplier ADD PRIMARY KEY (s_suppkey);" &
	$MYSQL -e "CREATE INDEX i_s_nationkey ON supplier (s_nationkey);" &
	$MYSQL -e "analyze table supplier"
}

part()
{
	load_table part

	$MYSQL -e "ALTER TABLE part ADD PRIMARY KEY (p_partkey);" &
	$MYSQL -e "analyze table part"
}

partsupp()
{
	load_table partsupp

	$MYSQL -e "ALTER TABLE partsupp ADD PRIMARY KEY (ps_partkey, ps_suppkey);" &
	$MYSQL -e "CREATE INDEX i_ps_partkey ON partsupp (ps_partkey);" &
	$MYSQL -e "CREATE INDEX i_ps_suppkey ON partsupp (ps_suppkey);" &
	$MYSQL -e "analyze table partsupp"
}

customer()
{
	load_table customer

	$MYSQL -e "ALTER TABLE customer ADD PRIMARY KEY (c_custkey);" &
	$MYSQL -e "CREATE INDEX i_c_nationkey ON customer (c_nationkey);" &
	$MYSQL -e "analyze table customer"
}

orders()
{
	load_table orders

	$MYSQL -e "ALTER TABLE orders ADD PRIMARY KEY (o_orderkey);" &
	$MYSQL -e "CREATE INDEX i_o_orderdate ON orders (o_orderdate);" &
	$MYSQL -e "CREATE INDEX i_o_custkey ON orders (o_custkey);" &
	$MYSQL -e "analyze table orders"
}

lineitem()
{
	load_table lineitem

	$MYSQL -e "ALTER TABLE lineitem ADD PRIMARY KEY (l_orderkey, l_linenumber);" &
	$MYSQL -e "CREATE INDEX i_l_shipdate ON lineitem (l_shipdate);" &
	$MYSQL -e "CREATE INDEX i_l_suppkey_partkey ON lineitem (l_partkey, l_suppkey);" &
	$MYSQL -e "CREATE INDEX i_l_partkey ON lineitem (l_partkey);" &
	$MYSQL -e "CREATE INDEX i_l_suppkey ON lineitem (l_suppkey);" &
	$MYSQL -e "CREATE INDEX i_l_receiptdate ON lineitem (l_receiptdate);" &
	$MYSQL -e "CREATE INDEX i_l_orderkey ON lineitem (l_orderkey);" &
	$MYSQL -e "CREATE INDEX i_l_orderkey_quantity ON lineitem (l_orderkey, l_quantity);" &
	$MYSQL -e "CREATE INDEX i_l_commitdate ON lineitem (l_commitdate);" &
	$MYSQL -e "analyze table lineitem"
}

nation()
{
	load_table nation

	$MYSQL -e "ALTER TABLE nation ADD PRIMARY KEY (n_nationkey);" &
	$MYSQL -e "CREATE INDEX i_n_regionkey ON nation (n_regionkey);" &
	$MYSQL -e "analyze table nation"
}

region()
{
	load_table region

	$MYSQL -e "ALTER TABLE region ADD PRIMARY KEY (r_regionkey);" &
	$MYSQL -e "analyze table region"
}

supplier &
part &
partsupp &
customer &
orders &
lineitem &
nation &
region &

wait
