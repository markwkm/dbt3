#!/bin/bash
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.  Please see
# the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

cmd_clear=0
cmd_start=0
cmd_end=0

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) MySQL time recorder

Usage:
  $(basename "${0}") [OPTION]

Options:
  -c             clear
  -e             set end time
  --mysql-socket=FILE
                 specify socket FILE
  -n NAME        NAME of the time to modify
  -s             set start time
  -V, --version  output version information, then exit
  -?, --help     show this help, then exit

@HOMEPAGE@
EOF
}

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-c)
		cmd_clear=1
		;;
	(-e)
		cmd_end=1
		;;
	(--mysql-socket)
		shift
		MYSQL_ARGS="${MYSQL_ARGS} --socket=${1}"
		;;
	(--mysql-socket=?*)
		MYSQL_ARGS="${MYSQL_ARGS} --socket=${1#*--mysql-socket=}"
		;;
	(-n)
		shift
		NAME=$OPTARG
		;;
	(-s)
		cmd_start=1
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

if [ -z ${DBNAME} ]; then
    echo "DBNAME not defined."
    exit 1
fi

if [ $cmd_clear == 1 ]; then
    SQL="DELETE FROM time_statistics"
    echo -n "Clearing all the time statistics..."
fi;

if [ $cmd_start == 1 ]; then
    s_time=`date +%s`
    SQL="INSERT INTO time_statistics (task_name, s_time, int_time) 
         VALUES ('$NAME', now(), $s_time)"
fi;

if [ $cmd_end == 1 ]; then
    SQL="UPDATE time_statistics SET e_time = now() WHERE task_name = '$NAME'"
fi;

eval "mysql -u root -D ${DBNAME} ${MYSQL_ARGS} -e \"${SQL}\""
