#!/bin/bash
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-3 Authors

MPP=0
NO_REFRESH_FLAG=
PRIVILEGED=1
PROFILE=0
EXTRA_ARGS=
STATS=0

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 3 (DBT-3) throughput tester

Usage:
  $(basename "${0}") [OPTION]

Options:
  -a DBMS        database management system to test
  -f SCALE       database scale factor, default 1
  -n STREAMS     number of throughput STREAMS
  -o DIRECTORY   DIRECTORY to store test results
  -s SEED        set SEED to a specific value
  -S             enable system and database stats collection"
  -t STREAM      set STREAM identifier
  -u             use tablespaces"
  -U             run test as an unprivileged user"
  -V, --version  output version information, then exit
  -Y             enable software profiling (Linux only)"
  -z             do not run refresh streams"
  -?, --help     show this help, then exit

DBMS options are:
  monetdb    MonetDB
  mysql      MySQL
  pgsql      PostgreSQL
  pgxl       Postgres-XL
  virtuoso   Virtuoso

PostgreSQL specific options:
  -e             EXPLAIN ANALYZE
  -p             database parameters for the throughput test"

@HOMEPAGE@
EOF
}

stop_procs() {
	if which ts-sysstat > /dev/null 2>&1; then
		ts-sysstat -o "${OUTPUT_DIR}/sysstat" -s &
	fi
	if which "ts-${DATABASE}-stat" > /dev/null 2>&1; then
		eval "ts-${DATABASE}-stat -o ${OUTPUT_DIR}/dbstat -s &"
	fi
}
trap 'stop_procs' INT TERM

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ]; do
	case "${1}" in
	(-a)
		shift
		DATABASE="${1}"
		if [ "x$DATABASE" = "xpgxl" ]; then
			MPP=1
		fi
		;;
	(-e)
		EXTRA_ARGS="$EXTRA_ARGS -e"
		;;
	(-f)
		shift
		scale_factor="${1}"
		;;
	(-n)
		shift
		num_stream="${1}"
		;;
	(-o)
		shift
		OUTPUT_DIR="${1}"
		mkdir -p $OUTPUT_DIR/results
		;;
	(-p)
		shift
		PARAMETERS_ARG="-p \"${1}\""
		;;
	(-s)
		shift
		SEED_FILE="${1}"
		;;
	(-S)
		STATS=1
		;;
	(-U)
		PRIVILEGED=0
		UNPRIVILEGED_ARG="-U"
		;;
	(-Y)
		PROFILE=1
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 3) v@PROJECT_VERSION@"
		;;
	(-z)
		NO_REFRESH_FLAG="-z"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

if [ "x$DATABASE" = "x" ]; then
	echo "Specify database management system with -a flag"
	exit 1
fi

if [ "x$DATABASE" = "xpgxl" ]; then
	TAG="pgsql"
	. $HOME/pgxc_ctl/pgxc_ctl.conf
	for HOSTNAME in ${datanodeMasterServers=[$i]}; do
		ssh $HOSTNAME "mkdir -p $OUTPUT_DIR/results"
	done
else
	TAG=$DATABASE
fi

which gzip > /dev/null 2>&1
if [ $? -eq 0 ]; then
	GZIP=gzip
else
	GZIP=true
fi

read SEED < $SEED_FILE
echo "Seed : $SEED" > $OUTPUT_DIR/readme.txt

RUNDIR=$OUTPUT_DIR/run
mkdir -p $RUNDIR

if [ $PRIVILEGED -eq 1 ]; then
	dbt3-$DATABASE-stop-db
	eval dbt3-$DATABASE-start-db -o $OUTPUT_DIR $PARAMETERS_ARG || exit 1
fi

dbt3-$TAG-time-statistics -s -n PERF.THRUPUT || exit 1

# Start collecting system statistics. 
if [ $STATS -eq 1 ]; then
	if ! which ts-sysstat > /dev/null 2>&1; then
		echo "WARNING: ts-sysstat not found for system stats collection"
	else
		ts-sysstat -o "${OUTPUT_DIR}/sysstat" &
	fi

	# Collect database statistics
	if ! which "ts-${DATABASE}-stat" > /dev/null 2>&1; then
		printf "WARNING: %s not found for database stats " \
				"ts-${DATABASE}-stat"
		echo "collection"
	else
		eval "ts-${DATABASE}-stat -o ${OUTPUT_DIR}/dbstat &"
	fi
fi

if [ "${MPP}" -eq 0 ] && [ "${PROFILE}" -eq 1 ]; then
	PERFDIR="${OUTPUT_DIR}/profile"
	ts-profile -o "${PERFDIR}" sleep 1 &
fi

# Start the streams.
eval "dbt3-throughput-stream-wrapper -f $scale_factor \
		-n $num_stream $EXTRA_ARGS -o $OUTPUT_DIR -s $SEED_FILE \
		$NO_REFRESH_FLAG $UNPRIVILEGED_ARG" || exit 1

dbt3-$TAG-time-statistics -e -n PERF.THRUPUT || exit 1

if [ $STATS -eq 1 ]; then
	stop_procs
fi

# Stop the database after the test.
if [ $PRIVILEGED -eq 1 ]; then
	dbt3-$DATABASE-stop-db
fi

if [ "${MPP}" -eq 0 ] && [ "${PROFILE}" -eq 1 ]; then
	echo "Generating profiling reports for throughput test..."
	ts-profile -o "${PERFDIR}" -p
fi
